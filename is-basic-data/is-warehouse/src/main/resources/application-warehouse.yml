

#datasource
spring.datasource:
  type: com.alibaba.druid.pool.DruidDataSource
  #   数据源其他配置
  druid:
    #    driverClassName: com.mysql.cj.jdbc.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${db.warehouse.host}/${db.warehouse.db-name}?useUnicode=true&useSSL=false&characterEncoding=utf8&allowMultiQueries=true&serverTimezone=Asia/Shanghai
    username: ${db.warehouse.username}
    password: ${db.warehouse.password}
    #     配置初始化大小、最小、最大线程数
    initialSize: 5
    minIdle: 5
    #     CPU核数+1，也可以大些但不要超过20，数据库加锁时连接过多性能下降
    maxActive: 20
    #     最大等待时间，内网：800，外网：1200（三次握手1s）
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    #     配置一个连接在池中最大空间时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1
    testWhileIdle: true
    #     设置从连接池获取连接时是否检查连接有效性，true检查，false不检查
    testOnBorrow: true
    #     设置从连接池归还连接时是否检查连接有效性，true检查，false不检查
    testOnReturn: true
    #     可以支持PSCache（提升写入、查询效率）
    poolPreparedStatements: true
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    #    filters: stat,wall,log4j
    filters: stat,wall
    #     保持长连接
    keepAlive: true
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

spring:
  cloud:
    sentinel:
      transport:
        port: ${is.sentinel-port}
        dashboard: ${SENTINEL_DASHBOARD}
      datasource:
        flow:
          nacos:
            server-addr: ${is.host}:${is.nacos-port}
            data-id: ${spring.application.name}-flow-rules
            group-id: ${is.sentinel-group}
            data-type: json
            rule-type: flow
            namespace: ${nacos.namespace}
            username: ${nacos.username}
            password: ${nacos.password}
        degrade:
          nacos:
            server-addr: ${is.host}:${is.nacos-port}
            data-id: ${spring.application.name}-degrade-rules
            group-id: ${is.sentinel-group}
            data-type: json
            rule-type: flow
            namespace: ${nacos.namespace}
            username: ${nacos.username}
            password: ${nacos.password}
        param-flow:
          nacos:
            server-addr: ${is.host}:${is.nacos-port}
            data-id: ${spring.application.name}-param-flow-rules
            group-id: ${is.sentinel-group}
            data-type: json
            rule-type: param-flow
            namespace: ${nacos.namespace}
            username: ${nacos.username}
            password: ${nacos.password}
        system:
          nacos:
            server-addr: ${is.host}:${is.nacos-port}
            data-id: ${spring.application.name}-system-rules
            group-id: ${is.sentinel-group}
            data-type: json
            rule-type: system
            namespace: ${nacos.namespace}
            username: ${nacos.username}
            password: ${nacos.password}
        authority:
          nacos:
            server-addr: ${is.host}:${is.nacos-port}
            data-id: ${spring.application.name}-authority-rules
            group-id: ${is.sentinel-group}
            data-type: json
            rule-type: authority
            namespace: ${nacos.namespace}
            username: ${nacos.username}
            password: ${nacos.password}

mybatis-plus:
  mapper-locations: classpath:/mapper/**/*.xml
  global-config:
    db-config:
      id-type: auto
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# seata config
seata:
  enabled: true
  application-id: ${spring.application.name}
  # 是否启用数据源bean的自动代理
  enable-auto-data-source-proxy: true
  tx-service-group: dev_tx_group   # 事务群组（可以每个应用单独取名，也可以使用相同名字，独立起名需要配置nacos）
  registry:
    type: nacos
    nacos:
      server-addr: ${is.host}:${is.nacos-port}
      namespace: ${nacos.namespace}
      group: ${is.seata-group}
      application: seata-server # 必须和服务器配置一样
      username: ${nacos.username}
      password: ${nacos.password}
      cluster: default
  config:
    type: nacos
    nacos:
      namespace: ${nacos.namespace}
      server-addr: ${is.host}:${is.nacos-port}
      group: ${is.seata-group}
      username: ${nacos.username}
      password: ${nacos.password}
      dataId: seata.properties
  service:
    vgroupMapping:
      dev_tx_group: default # 必须和服务器配置一样
  #    grouplist:
  #      default: 127.0.0.1:8091
  #    enable-degrade: false
  #    disable-global-transaction: false
  client:
    rm:
      # 是否上报成功状态
      report-success-enable: true
      # 重试次数
      report-retry-count: 5
